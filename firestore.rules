rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users – owner read/write
    match /users/{uid} {
      allow read, write: if request.auth != null && request.auth.uid == uid;
    }

    // Bookings – owner read; writes from Functions only
    match /bookings/{id} {
      allow read: if request.auth != null && request.resource.data.uid == request.auth.uid;
      allow write: if false; // Functions only
    }

    // Contracts – owner read; Functions write
    match /contracts/{id} {
      allow read: if request.auth != null && request.resource.data.uid == request.auth.uid;
      allow write: if false; // Functions only
    }

    // Payments – owner read; Functions write
    match /payments/{id} {
      allow read: if request.auth != null && request.resource.data.uid == request.auth.uid;
      allow write: if false; // Functions only
    }

    // Subscriptions – owner read; Functions write
    match /subscriptions/{id} {
      allow read: if request.auth != null && request.resource.data.uid == request.auth.uid;
      allow write: if false; // Functions only
    }

    // Files – owner read; owner write; public read if visibility == "public"
    match /files/{id} {
      allow read: if resource.data.visibility == "public" || (request.auth != null && request.auth.uid == resource.data.uid);
      allow create, update, delete: if request.auth != null && request.auth.uid == request.resource.data.uid;
    }
  }
}

